= Document Header
:icons: font
:linkattrs:
:imagesdir: images
:data-uri:

== Lists

=== UL

* Edgar Allen Poe
* Sheri S. Tepper
* Bill Bryson

=== OL

. Step 1
. Step 2
. Step 3

== Admonition

[NOTE]
====

.A list
- one
- two
- three

====

[WARNING]
====

.B list
- four
- five
- six

====

[CAUTION]
====

.C list
- seven
- eight
- nine

====



== Links

=== External

https://asciidoctor.org[Asciidoctor]

=== With spaces and special characters

link:++https://example.org/?q=[a b]++[URL with special characters]

=== Relative

link:index.html[Docs]

=== Link with attributes

https://discuss.asciidoctor.org[Discuss Asciidoctor,role=external,window=_blank]

=== Inline anchors

[[bookmark-a]]Inline anchors make arbitrary content referenceable.

=== Internal cross references

See <<Links>> to learn how to write links.

== Images

=== Block

image::sunset.jpg[Sunset,300,200]

=== Inline

Click image:sunset.jpg[Sunset,50,50,Play, title="Play"] to get the party started.

=== Inline image with positioning role

image:sunset.jpg[Sunset,150,150,role="right"] What a beautiful sunset!

== Videos

=== Block

video::video_file.mp4[width=640]

=== Embedded Youtube video

video::LXb3EKWsInQ[youtube]

== Source Code

=== Code block with title and syntax highlighting

.app.cpp
[source,c++]
----
#include <iostream>
using namespace std;

int main() 
{
    cout << "Hello, World!";
    return 0;
}
----

=== Inline

Reference code like `types` or `methods` inline.

Do not pass arbitrary ``Object``s to methods that accept ``String``s!

== Linux Bash Script Code

```sh
# print the contents of foo.txt to STDOUT
$ cat foo.txt
```

== Table

.Table Title
[%header,cols=2*] 
|===
|Name of Column 1
|Name of Column 2

|Cell in column 1, row 1
|Cell in column 2, row 1

|Cell in column 1, row 2
|Cell in column 2, row 2
|===

== UML

=== CLASS

image::../umls/class1/class1.png[Class1,300,200]

=== USE CASE

image::../umls/usecase1/usecase1.png[Class1,300,200]

=== Week 2 Homework

image::../UML_Class_diagram/scenario_uml.png[Class1,800,200]